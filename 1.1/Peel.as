package {		import flash.display.*;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.events.ProgressEvent;	import flash.net.URLRequest;	import flash.net.navigateToURL;	import flash.external.ExternalInterface;	import flash.display.Loader;	import fl.transitions.Tween;	import fl.transitions.easing.*;	import flash.system.Security;	import flash.net.SharedObject;		public class Peel extends MovieClip {				private var _peelMc:MovieClip;		private var _maskMc:MovieClip;		private var _adMc:MovieClip;		private var _contentMc:MovieClip;		private var _contentMcLoad:MovieClip;		private var _teaseMc:MovieClip;		private var _teaseMcLoad:MovieClip;				private var _rewind:Boolean;		private var _flag:Boolean;		private var _teaseLoader:Loader;		private var _adLoader:Loader;		private var _so:SharedObject;				private var _pre:Preload;				public function Peel() {						Security.allowDomain("*"); // http://livedocs.adobe.com/flash/9.0/ActionScriptLangRefV3/flash/system/Security.html#includeExamplesSummary						// Stage:			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_RIGHT;						init();					}				private function init() {						this.buttonMode = true;						_flag = false;						_peelMc = this.peel_mc;			_maskMc = this.mask_mc;			_adMc = this.ad_mc;			_teaseMc = this.ad_mc.tease_mc;			_teaseMc.alpha = 0;			_contentMc = this.ad_mc.content_mc;						_so = SharedObject.getLocal("test");			if (_so.size == 0) {				// Shared object doesn't exist.				trace("created...");				_so.data.now = new Date().time;			}			var ageMS:Number = new Date().time - _so.data.now;			trace("SharedObject was created " + Number(ageMS / 1000 / 60).toPrecision(2) + " minutes ago");			trace("SharedObject is " + _so.size + " bytes");			_so.flush();						_pre = new Preload(["tease.swf","ad.swf"]);			_pre.addEventListener("preloadProgress", onPreloadProgress);			_pre.addEventListener("preloadComplete", onPreloadComplete);					}				private function onPreloadProgress(e:Event) {			// Nothing here for now.		}			private function onPreloadComplete(e:Event) {			_pre.removeEventListener("preloadComplete", onPreloadComplete); // garbage collect			_pre.removeEventListener("preloadProgress", onPreloadProgress);			trace(_pre.objects); // get the loaded objects as an array			main(_pre.objects); // try this to see the loaded images through the function 'showObjects' below		}				private function main(o:Array) {						// http://livedocs.adobe.com/flash/9.0/main/wwhelp/wwhimpl/common/html/wwhelp.htm?context=LiveDocs_Parts&file=00000216.html			_teaseMcLoad = MovieClip(o[0]); // Cast 'DisplayObject' to 'MovieClip'.			_teaseMc.addChild(_teaseMcLoad); // Add your swf directly to the stage.			fadeIn(_teaseMc);			_contentMcLoad = MovieClip(o[1]);			_contentMc.addChild(_contentMcLoad);						this.addEventListener(Event.ENTER_FRAME, onEnter, false, 0, true);						this.addEventListener(MouseEvent.ROLL_OVER, onOver, false, 0, true);			this.addEventListener(MouseEvent.ROLL_OUT, onOut, false, 0, true);			this.addEventListener(MouseEvent.CLICK, onClick, false, 0, true); // http://www.kirupa.com/forum/showthread.php?t=260312					}				private function onEnter(e:Event):void {						if (_peelMc.currentFrame == 1) {				_flag = false;				_rewind = false;				_peelMc.play();				_maskMc.play();				_adMc.play();				if (_contentMcLoad.currentFrame != 1) {					_contentMcLoad.gotoAndStop(1);				}			} else if (!_flag && (_peelMc.currentLabel != 'loop')) {				_peelMc.gotoAndPlay('loop');				_maskMc.gotoAndPlay('loop');				_adMc.gotoAndPlay('loop');			} else if (_rewind) {				if (_adMc.currentFrame <= 100) {					_peelMc.prevFrame();					_maskMc.prevFrame();				}				_adMc.prevFrame();			}					}				private function onOver(e:MouseEvent):void {						trace(e.type);						_flag = true;			_rewind = false;			_peelMc.play();			_maskMc.play();			_adMc.play();			_contentMcLoad.play(); // Now you can use all MovieClip methods!			fadeOut(_teaseMc);					}				private function onOut(e:MouseEvent):void {						trace(e.type);						_flag = true;			_rewind = true;					}				private function fadeOut(clip:MovieClip) {			trace(clip.alpha);			// Tween(object, "property", EasingType, begin, end, duration, useSeconds)			var tween:Tween = new Tween(clip, "alpha", None.easeNone, clip.alpha, 0, 20, false);		}				private function fadeIn(clip:MovieClip) {			trace(clip.alpha);			// Tween(object, "property", EasingType, begin, end, duration, useSeconds)			var tween:Tween = new Tween(clip, "alpha", None.easeNone, clip.alpha, 1, 20, false);		}				private function onClick(e:MouseEvent):void {			getURL(getClickTag());		}				private function getClickTag():String {			var theReturn = ""			for (var key:String in root.loaderInfo.parameters) {				if(key.toLowerCase() == "clicktag") {					theReturn = root.loaderInfo.parameters[key];					break;				}			}			return theReturn;		}				private function getURL(url:String, window:String = "_blank"):void {			var broswer:String = ExternalInterface.call("function getBrowser(){return navigator.userAgent}") as String;			if(broswer.indexOf("Firefox") != -1 || broswer.indexOf("MSIE 7.0") != -1) {				ExternalInterface.call('window.open("' + url + '","' + window + '")');			} else {				navigateToURL(new URLRequest(url), window);			}		}			}	}
package com.registerguard.peel {		import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.DisplayObject;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;		public class Peel extends MovieClip {				// Private:		private var _stager:Stager;		private var _cookie:Cookie;		private var _timing:Timing;		private var _peelMc:MovieClip;		private var _maskMc:MovieClip;		private var _closeBtn:SimpleButton;		private var _rewind:Boolean;		private var _flag:Boolean;				/**		* Peel()		*        About: Class constructor.		*      Returns: Nothing.		*/		public function Peel():void {						// Initialize program:			init();					};				/**		* init()		*        About: Initialize.		*      Returns: Nothing.		*/		private function init():void {						// Button mode:			this.buttonMode = true;						// Initialize:			_flag = false;						// Instantiate custom classes:			_stager = new Stager(this);			_cookie = new Cookie("cookie");						// Object lookups:			_peelMc = this.peel_mc;			_maskMc = this.mask_mc;			_closeBtn = _peelMc.close_btn;						// Begin program:			peeler();					};				/**		* peeler()		*        About: Launching pad for the differnt events.		*      Returns: Nothing.		*/		private function peeler():void {						// Event.ENTER_FRAME event listener:			this.addEventListener(Event.ENTER_FRAME, onEnter, false, 0, true);						if (_closeBtn.hasEventListener(MouseEvent.MOUSE_UP)) {								// Garbage collection:				_closeBtn.removeEventListener(MouseEvent.MOUSE_UP, onPeelClosed);							}						if (_cookie.cookieExists() == false) {								_flag = true;								// Set cookie:				_cookie.cookieSet();								// First time visit, open the peel:				_peelMc.play();				_maskMc.play();							} else {								// Setup event listeners:				this.addEventListener(MouseEvent.ROLL_OVER, onOver, false, 0, true);				this.addEventListener(MouseEvent.ROLL_OUT, onOut, false, 0, true);							}					};				/**		* onEnter()		*        About: Handles Event.ENTER_FRAME event.		*      Returns: Nothing.		*/		private function onEnter(e:Event):void {						if (_peelMc.currentFrame == 1) {								// Bools:				_flag = false;				_rewind = false;								// Play:				_peelMc.play();				_maskMc.play();							} else if (!_flag && (_peelMc.currentLabel != 'loop')) {								// Loop:				_peelMc.gotoAndPlay('loop');				_maskMc.gotoAndPlay('loop');							} else if (_rewind == true) {								// Rewind:				_peelMc.prevFrame();				_maskMc.prevFrame();							} else {								// If peel is opened, call onPeelOpened(), otherwise trace current frame number:				(_peelMc.currentLabel == "finish") ? onPeelOpened() : trace(_peelMc.currentFrame);							}					};				/**		* onOver()		*        About: Handles MouseEvent.ROLL_OVER event.		*      Returns: Nothing.		*/		private function onOver(e:Event):void {						// Bools:			_flag = true;			_rewind = false;						// Play:			_peelMc.play();			_maskMc.play();					};				/**		* onOut()		*        About: Handles MouseEvent.ROLL_OVER event.		*      Returns: Nothing.		*/		private function onOut(e:Event):void {						_flag = true;			_rewind = true;					};				/**		* onUp()		*        About: Handles MouseEvent.MOUSE_UP event for peel close button.		*      Returns: Nothing.		*/		private function onPeelClosed(e:Event):void {						// GC:			_timing.removeEventListener(Timing.TIMING_COMPLETE, onPeelClosed);						// Bools:			_rewind = true;						// Launching pad:			peeler();					};				/**		* onPeelOpened()		*        About: Fired when peel is fully opened.		*      Returns: Nothing.		*/		private function onPeelOpened():void {						// GC:			this.removeEventListener(Event.ENTER_FRAME, onEnter);			this.removeEventListener(MouseEvent.ROLL_OVER, onOver);			this.removeEventListener(MouseEvent.ROLL_OUT, onOut);						// Setup the close button:			_closeBtn.addEventListener(MouseEvent.MOUSE_UP, onPeelClosed, false, 0, true);						// Timer:			_timing = new Timing(10000);			_timing.addEventListener(Timing.TIMING_COMPLETE, onPeelClosed, false, 0, true);					};			};	};
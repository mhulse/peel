package com.registerguard.peel {		import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.DisplayObject;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.MouseEvent;		import gs.TweenLite;		public class Main extends MovieClip {				// Private:		private var _load:Load;		private var _cookie:Cookie;		private var _timing:Timing;		private var _this:Object;		private var _mainMc:MovieClip;		private var _peelMc:MovieClip;		private var _maskMc:MovieClip;		private var _contentMc:MovieClip;		private var _adMc:MovieClip;		private var _adMcLoad:MovieClip;		private var _teaseMc:MovieClip;		private var _teaseMcLoad:MovieClip;		private var _closeBtn:SimpleButton;		private var _rewind:Boolean;		private var _flag:Boolean;				/**		* Main()		*        About: Class constructor.		*      Returns: Nothing.		*/		public function Main() {						trace('Main() instantiated...');						init();					};				/**		* init()		*        About: Initialize.		*      Returns: Nothing.		*/		private function init():void {						// Initialize:			_this = this;			_flag = false;						// Instantiate custom classes:			_cookie = new Cookie("cookie");			var stager:Stager = new Stager(_this); // Setup stage.						// Object lookups:			_mainMc = _this.main_mc;			_peelMc = _mainMc.peel_mc;			_maskMc = _mainMc.mask_mc;			_contentMc = _mainMc.content_mc;			_teaseMc = _contentMc.tease_mc;			_adMc = _contentMc.ad_mc;			_closeBtn = _peelMc.close_btn;						// Button mode:			_mainMc.buttonMode = true;						// Alpha:			//_mainMc.visible = false;			//_mainMc.alpha = 0;						// Load():			_load = new Load(_this);			_load.addEventListener(Load.LOAD_COMPLETE, onLoadComplete, false, 0, true); // Wait for loading to complete.					};				/**		* onLoadComplete()		*        About: Event listener, called when loading completed.		*      Returns: Nothing.		*/		private function onLoadComplete(e:Event):void {						trace('Load complete...');						_load.removeEventListener(Load.LOAD_COMPLETE, onLoadComplete); // GC.						// http://livedocs.adobe.com/flash/9.0/main/wwhelp/wwhimpl/common/html/wwhelp.htm?context=LiveDocs_Parts&file=00000216.html			_adMcLoad = MovieClip(_load.pre.objects[0]); // Cast 'DisplayObject' to 'MovieClip'.			_adMcLoad.stop(); // Stop until told to play.			_adMc.addChild(_adMcLoad); // Add to movieclip stage.						// IBID			_teaseMcLoad = MovieClip(_load.pre.objects[1]);			_teaseMc.addChild(_teaseMcLoad);						// Go to frame label "loaded":			_this.gotoAndStop("loaded");						// Show the peel:			//_mainMc.visible = true;			//TweenLite.to(_mainMc, 2, { autoAlpha: 1 });						// Begin program:			peeler();					};				/**		* peeler()		*        About: Launching pad for the differnt events.		*      Returns: Nothing.		*/		private function peeler():void {						// Event.ENTER_FRAME event listener:			_mainMc.addEventListener(Event.ENTER_FRAME, onEnter, false, 0, true);						if (_cookie.cookieExists() == false) {								_flag = true;								// Set cookie:				_cookie.cookieSet();								// Hide:				//_teaseMc.visible = false;				TweenLite.to(_teaseMc, .5, { autoAlpha: 0 });								// First time visit, open the peel:				_peelMc.play();				_maskMc.play();				_adMcLoad.gotoAndPlay(1);							} else {								// Setup event listeners:				_mainMc.addEventListener(MouseEvent.ROLL_OVER, onOver, false, 0, true);				_mainMc.addEventListener(MouseEvent.ROLL_OUT, onOut, false, 0, true);							}					};				/**		* onEnter()		*        About: Handles Event.ENTER_FRAME event.		*      Returns: Nothing.		*/		private function onEnter(e:Event):void {						if (_peelMc.currentFrame == 1) {								// Bools:				_flag = false;				_rewind = false;								// Play:				_peelMc.play();				_maskMc.play();							} else if (!_flag && (_peelMc.currentLabel != 'loop')) {								// Loop:				_peelMc.gotoAndPlay('loop');				_maskMc.gotoAndPlay('loop');							} else if (_rewind == true) {								// Rewind:				_peelMc.prevFrame();				_maskMc.prevFrame();							} else {								// If peel is opened, call onPeelOpened(), otherwise trace current frame number:				(_peelMc.currentLabel == "finish") ? peelOpened() : trace(_peelMc.currentFrame);							}					};				/**		* onOver()		*        About: Handles MouseEvent.ROLL_OVER event.		*      Returns: Nothing.		*/		private function onOver(e:Event):void {						// Bools:			_flag = true;			_rewind = false;						// Hide:			//_teaseMc.visible = false;			TweenLite.to(_teaseMc, .5, { autoAlpha: 0 });						// Play:			_peelMc.play();			_maskMc.play();			_adMcLoad.play();					};				/**		* onOut()		*        About: Handles MouseEvent.ROLL_OVER event.		*      Returns: Nothing.		*/		private function onOut(e:Event):void {						// Bools:			_flag = true;			_rewind = true;						// Listen for first frame:			_peelMc.addEventListener(Event.ENTER_FRAME, onFirstFrame, false, 0, true);					};				/**		* onUp()		*        About: Handles MouseEvent.MOUSE_UP event for peel close button.		*      Returns: Nothing.		*/		private function onPeelClosed(e:Event):void {						// GC:			_closeBtn.removeEventListener(MouseEvent.MOUSE_UP, onPeelClosed);			_timing.removeEventListener(Timing.TIMING_COMPLETE, onPeelClosed);						// Bools:			_rewind = true;						// Listen for first frame:			_peelMc.addEventListener(Event.ENTER_FRAME, onFirstFrame, false, 0, true);						// Launching pad:			peeler();					};				/**		* onPeelOpened()		*        About: Fired when peel is fully opened.		*      Returns: Nothing.		*/		private function peelOpened():void {						// GC:			_mainMc.removeEventListener(Event.ENTER_FRAME, onEnter);			_mainMc.removeEventListener(MouseEvent.ROLL_OVER, onOver);			_mainMc.removeEventListener(MouseEvent.ROLL_OUT, onOut);						// Setup the close button:			_closeBtn.addEventListener(MouseEvent.MOUSE_UP, onPeelClosed, false, 0, true);						// Timer:			_timing = new Timing(10000);			_timing.addEventListener(Timing.TIMING_COMPLETE, onPeelClosed, false, 0, true);					};				/**		* onFirstFrame()		*        About: Event listener method to check for first frame.		*      Returns: Nothing.		*/		private function onFirstFrame(e:Event):void {						// First frame?			if (e.target.currentFrame == 1) {								// GC:				e.target.removeEventListener(Event.ENTER_FRAME, onFirstFrame);								// Show our tease movie:				//_teaseMc.visible = true;				TweenLite.to(_teaseMc, 1, { autoAlpha: 1, onComplete:onFinishTween });							}					};				/**		* onFinishTween()		*        About: Callback method for TweenLite first frame check.		*      Returns: Nothing.		*/		private function onFinishTween():void {						// Reset the loaded ad:			_adMcLoad.gotoAndStop(1);					};			};	};